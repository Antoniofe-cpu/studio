{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase/config.ts"],"sourcesContent":["\nimport { initializeApp, getApps, getApp, type FirebaseApp } from 'firebase/app';\nimport { getAuth, type Auth } from 'firebase/auth';\nimport { getFirestore, type Firestore } from 'firebase/firestore';\n\n// ATTENZIONE: Sostituisci questi segnaposto con i valori REALI\n// della configurazione del tuo progetto Firebase \"watchgraph\".\n// Troverai questi valori nella console Firebase:\n// Impostazioni progetto > Generali > Le tue app > Seleziona la tua app Web > Configurazione SDK Firebase (opzione \"Config\").\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBsup1LANccRepTNF0Y1CoBcfMjnqZGkyw\",\n  authDomain: \"watchgraph-a91fd.firebaseapp.com\",\n  projectId: \"watchgraph-a91fd\",\n  storageBucket: \"watchgraph-a91fd.firebasestorage.app\",\n  messagingSenderId: \"984650741137\",\n  appId: \"1:984650741137:web:861fec7023fe4afbe5d630\",\n  measurementId: \"G-8KZVYL1TGD\" // Opzionale, ma se presente nella tua config, includilo\n};\n\n// Inizializza Firebase\nlet app: FirebaseApp;\nif (!getApps().length) {\n  app = initializeApp(firebaseConfig);\n} else {\n  app = getApp();\n}\n\nconst auth: Auth = getAuth(app);\nconst db: Firestore = getFirestore(app);\n\nexport { app, auth, db };\n"],"names":[],"mappings":";;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,+DAA+D;AAC/D,+DAA+D;AAC/D,iDAAiD;AACjD,6HAA6H;AAC7H,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe,eAAe,wDAAwD;AACxF;AAEA,uBAAuB;AACvB,IAAI;AACJ,IAAI,CAAC,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,EAAE;IACrB,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AACtB,OAAO;IACL,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;AACb;AAEA,MAAM,OAAa,CAAA,GAAA,yOAAA,CAAA,UAAO,AAAD,EAAE;AAC3B,MAAM,KAAgB,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase/firestore-service.ts"],"sourcesContent":["\nimport { collection, getDocs, query, Timestamp, type QueryConstraint, orderBy, doc, getDoc } from 'firebase/firestore';\nimport { db } from './config';\nimport type { WatchDeal, DealLabel } from '@/lib/types';\n\nconst DEALS_COLLECTION_NAME = 'deals';\nconst MULTI_SOURCE_DEALS_COLLECTION_NAME = 'deals_multi_source';\n\nfunction mapDocToWatchDeal(docSnap: { id: string; data: () => any }): WatchDeal {\n  const data = docSnap.data();\n\n  let lastUpdatedString: string;\n  if (data.lastUpdated instanceof Timestamp) {\n    lastUpdatedString = data.lastUpdated.toDate().toISOString();\n  } else if (typeof data.lastUpdated === 'string') {\n    lastUpdatedString = data.lastUpdated;\n  } else if (typeof data.lastUpdated === 'object' && data.lastUpdated?.seconds) {\n    lastUpdatedString = new Date(data.lastUpdated.seconds * 1000 + (data.lastUpdated.nanoseconds || 0) / 1000000).toISOString();\n  } else {\n    lastUpdatedString = new Date(0).toISOString();\n  }\n\n  let finalImageUrls: string[] = [];\n  let finalPrimaryImageUrl: string | null = null;\n\n  // Helper function to robustly clean URLs by repeatedly replacing &amp; with &\n  const cleanUrl = (url: string | null | undefined): string | null => {\n    if (!url || typeof url !== 'string') return null;\n    let cleaned = url.trim();\n    // Loop to catch multiple encodings like &amp;amp; -> &amp; -> &\n    while (cleaned.includes('&amp;')) {\n      cleaned = cleaned.replace(/&amp;/g, '&');\n    }\n    return cleaned;\n  };\n\n  // Prioritize imageUrls array\n  if (Array.isArray(data.imageUrls) && data.imageUrls.length > 0) {\n    finalImageUrls = data.imageUrls\n      .map(cleanUrl) // Clean each URL in the array\n      .filter((url: any): url is string => url !== null && url.trim() !== '');\n  }\n\n  // If imageUrls is empty or not an array, try the singular imageUrl\n  if (finalImageUrls.length === 0) {\n    const cleanedSingularUrl = cleanUrl(data.imageUrl);\n    if (cleanedSingularUrl) {\n      finalImageUrls = [cleanedSingularUrl];\n    }\n  }\n\n  // Set the primary image URL from the (now cleaned) finalImageUrls\n  if (finalImageUrls.length > 0) {\n    finalPrimaryImageUrl = finalImageUrls[0];\n  }\n\n  const validDealLabels: DealLabel[] = ['🔥 Affare', '👍 OK', '❌ Fuori Prezzo'];\n  let currentDealLabel: WatchDeal['dealLabel'] = data.dealLabel || null;\n  if (currentDealLabel && !validDealLabels.includes(currentDealLabel as DealLabel)) {\n    currentDealLabel = '👍 OK';\n  }\n\n  const deal: WatchDeal = {\n    id: docSnap.id,\n    title: data.title || `${data.brand || 'Watch'} ${data.model || ''}`.trim(),\n    brand: data.brand || null,\n    model: data.model || null,\n    referenceNumber: data.referenceNumber || null,\n\n    listingPriceEUR: typeof data.listingPriceEUR === 'number' ? data.listingPriceEUR : (typeof data.listingPrice === 'number' ? data.listingPrice : null),\n    marketPriceEUR: typeof data.marketPriceEUR === 'number' ? data.marketPriceEUR : (typeof data.marketPrice === 'number' ? data.marketPrice : null),\n    retailPriceEUR: typeof data.retailPriceEUR === 'number' ? data.retailPriceEUR : (typeof data.retailPrice === 'number' ? data.retailPrice : null),\n\n    originalListingPrice: typeof data.originalListingPrice === 'number' ? data.originalListingPrice : null,\n    originalCurrency: data.originalCurrency || null,\n\n    estimatedMarginPercent: typeof data.estimatedMarginPercent === 'number' ? data.estimatedMarginPercent : null,\n    aiScore: typeof data.aiScore === 'number' ? data.aiScore : null,\n    dealLabel: currentDealLabel,\n\n    imageUrl: finalPrimaryImageUrl, // This now uses the robustly cleaned URL\n    imageUrls: finalImageUrls,     // This is now an array of robustly cleaned URLs\n\n    sourceUrl: data.sourceUrl || '#',\n    description: data.description || undefined,\n    condition: data.condition || undefined,\n    demand: data.demand || undefined,\n    rarity: data.rarity || undefined,\n    risk: data.risk || undefined,\n    location: data.location || undefined,\n    lastUpdated: lastUpdatedString,\n    tags: Array.isArray(data.tags) ? data.tags.filter((tag: any) => typeof tag === 'string') : [],\n  };\n\n  return deal;\n}\n\nasync function fetchDealsFromCollection(collectionName: string): Promise<WatchDeal[]> {\n  try {\n    const dealsCollectionRef = collection(db, collectionName);\n    const q = query(dealsCollectionRef, orderBy(\"lastUpdated\", \"desc\"));\n    const querySnapshot = await getDocs(q);\n\n    if (querySnapshot.empty) {\n      console.log(`No documents found in the '${collectionName}' collection.`);\n      return [];\n    }\n\n    const deals = querySnapshot.docs.map((doc) => mapDocToWatchDeal({ id: doc.id, data: () => doc.data() }));\n    console.log(`Successfully fetched and mapped ${deals.length} deals from '${collectionName}'.`);\n    return deals;\n  } catch (error) {\n    console.error(`Error fetching watch deals from Firestore collection '${collectionName}':`, error);\n    return [];\n  }\n}\n\nexport async function getWatchDealsFromAllSources(): Promise<WatchDeal[]> {\n  try {\n    console.log(\"Fetching deals from all configured sources...\");\n    const dealsFromDefault = await fetchDealsFromCollection(DEALS_COLLECTION_NAME);\n    const dealsFromMultiSource = await fetchDealsFromCollection(MULTI_SOURCE_DEALS_COLLECTION_NAME);\n\n    const allDealsMap = new Map<string, WatchDeal>();\n\n    dealsFromDefault.forEach(deal => {\n      allDealsMap.set(deal.id, deal);\n    });\n\n    dealsFromMultiSource.forEach(deal => {\n      allDealsMap.set(deal.id, deal); // This will overwrite if ID exists in default, giving priority to multi_source\n    });\n\n    const combinedDeals = Array.from(allDealsMap.values());\n\n    combinedDeals.sort((a, b) => new Date(b.lastUpdated).getTime() - new Date(a.lastUpdated).getTime());\n\n    console.log(`Successfully fetched and combined ${combinedDeals.length} deals from all sources.`);\n    return combinedDeals;\n  } catch (error) {\n    console.error(\"Error fetching watch deals from all sources:\", error);\n    return [];\n  }\n}\n\n\nexport async function getWatchDealById(id: string): Promise<WatchDeal | null> {\n  try {\n    console.log(`Fetching single deal with ID: ${id} from all sources.`);\n\n    let docRef = doc(db, MULTI_SOURCE_DEALS_COLLECTION_NAME, id);\n    let docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      console.log(`Deal ${id} found in '${MULTI_SOURCE_DEALS_COLLECTION_NAME}'.`);\n      return mapDocToWatchDeal({ id: docSnap.id, data: () => docSnap.data() });\n    }\n\n    console.log(`Deal ${id} not in '${MULTI_SOURCE_DEALS_COLLECTION_NAME}', checking '${DEALS_COLLECTION_NAME}'.`);\n    docRef = doc(db, DEALS_COLLECTION_NAME, id);\n    docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      console.log(`Deal ${id} found in '${DEALS_COLLECTION_NAME}'.`);\n      return mapDocToWatchDeal({ id: docSnap.id, data: () => docSnap.data() });\n    }\n\n    console.log(`No such document with ID: ${id} in any configured collection.`);\n    return null;\n  } catch (error) {\n    console.error(`Error fetching single watch deal with ID ${id} from all sources:`, error);\n    return null;\n  }\n}\n\nexport async function getWatchDealsFromFirestore(): Promise<WatchDeal[]> {\n  return fetchDealsFromCollection(DEALS_COLLECTION_NAME);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 341, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/deal-list.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DealList = registerClientReference(\n    function() { throw new Error(\"Attempted to call DealList() from the server but DealList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/deal-list.tsx <module evaluation>\",\n    \"DealList\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,8DACA","debugId":null}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/deal-list.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DealList = registerClientReference(\n    function() { throw new Error(\"Attempted to call DealList() from the server but DealList is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/deal-list.tsx\",\n    \"DealList\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,0CACA","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\nimport { getWatchDealsFromAllSources } from \"@/lib/firebase/firestore-service\"; // Updated import\nimport { DealList } from \"@/components/deal-list\";\nimport type { WatchDeal } from '@/lib/types';\n\nexport default async function HomePage() {\n  // 1. Recupera TUTTI gli affari da tutte le fonti configurate sul server\n  const allDeals: WatchDeal[] = await getWatchDealsFromAllSources(); // Updated function call\n\n  return (\n    <div className=\"space-y-8\">\n      <section className=\"text-center py-8 bg-card rounded-lg shadow-md\">\n        <h1 className=\"text-4xl font-bold font-headline text-primary mb-2\">WatchFinder AI</h1>\n        <p className=\"text-xl text-muted-foreground\">\n          Trova il vero affare. Ogni giorno. Analisi di mercato e suggerimenti intelligenti.\n        </p>\n      </section>\n      \n      <DealList initialDeals={allDeals} />\n\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA,wPAAgF,iBAAiB;AACjG;;;;AAGe,eAAe;IAC5B,wEAAwE;IACxE,MAAM,WAAwB,MAAM,CAAA,GAAA,8IAAA,CAAA,8BAA2B,AAAD,KAAK,wBAAwB;IAE3F,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAG,WAAU;kCAAqD;;;;;;kCACnE,8OAAC;wBAAE,WAAU;kCAAgC;;;;;;;;;;;;0BAK/C,8OAAC,kIAAA,CAAA,WAAQ;gBAAC,cAAc;;;;;;;;;;;;AAI9B","debugId":null}}]
}